@model Proyecto_Final_Desarrollo_Web.ViewModels.TiendaViewModel

@{
    ViewBag.Title = Model.Productos[0].Nombre;
    var producto = Model.Productos[0];
}

<!-- Migas de pan -->
<nav aria-label="breadcrumb" class="bg-light py-3 mb-4">
    <div class="container">
        <ol class="breadcrumb m-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Inicio</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Tienda", "Home")">Tienda</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Tienda", "Home", new { filtro = new { CategoriaId = producto.ID_Categoria } })">@producto.Categoria</a></li>
            <li class="breadcrumb-item active" aria-current="page">@producto.Nombre</li>
        </ol>
    </div>
</nav>

<div class="container mb-5">
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body p-0">
            <div class="row g-0">
                <!-- Imagen del producto -->
                <div class="col-md-5">
                    <div class="product-gallery p-4">
                        <div class="main-image mb-3">
                            <img src="@(string.IsNullOrEmpty(producto.UrlImagen) ? "/Content/images/product-placeholder.jpg" : producto.UrlImagen)"
                                 class="img-fluid rounded" alt="@producto.Nombre" id="mainProductImage">
                        </div>
                        <div class="thumbnails d-flex flex-wrap gap-2 justify-content-center">
                            <!-- Imagen principal como miniatura -->
                            <div class="thumbnail-item active">
                                <img src="@(string.IsNullOrEmpty(producto.UrlImagen) ? "/Content/images/product-placeholder.jpg" : producto.UrlImagen)"
                                     class="img-thumbnail" alt="@producto.Nombre"
                                     onclick="changeMainImage(this.src)">
                            </div>
                            <!-- Miniaturas adicionales (simuladas) -->
                            <div class="thumbnail-item">
                                <img src="/Content/images/product-placeholder-2.jpg" class="img-thumbnail" alt="Vista alternativa"
                                     onclick="changeMainImage(this.src)">
                            </div>
                            <div class="thumbnail-item">
                                <img src="/Content/images/product-placeholder-3.jpg" class="img-thumbnail" alt="Vista alternativa"
                                     onclick="changeMainImage(this.src)">
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Información del producto -->
                <div class="col-md-7">
                    <div class="product-info p-4">
                        <h1 class="h2 mb-1">@producto.Nombre</h1>

                        <div class="mb-3">
                            <span class="badge bg-light text-dark me-2">@producto.Categoria</span>
                            @if (producto.EsNuevo)
                            {
                                <span class="badge bg-success me-2">Nuevo</span>
                            }
                            @if (producto.EsOferta)
                            {
                                <span class="badge bg-danger me-2">Oferta</span>
                            }
                            <span class="badge bg-primary">SKU: PROD-@producto.ID_Producto</span>
                        </div>

                        <div class="product-rating mb-3">
                            <span class="text-warning">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="bi @(i <= Math.Floor(producto.Valoracion) ? "bi-star-fill" : (i <= producto.Valoracion ? "bi-star-half" : "bi-star"))"></i>
                                }
                            </span>
                            <span class="ms-2 text-muted">@producto.Valoracion de 5 (@producto.NumeroVentas ventas)</span>
                        </div>

                        <div class="product-price mb-3">
                            @if (producto.EsOferta)
                            {
                                <span class="text-decoration-line-through text-muted fs-5 me-2">@producto.PrecioOriginal.ToString("C0")</span>
                                <span class="fs-3 fw-bold text-danger">@producto.Precio.ToString("C0")</span>
                                <span class="ms-2 badge bg-danger">-@(producto.PorcentajeDescuento * 100)%</span>
                            }
                            else
                            {
                                <span class="fs-3 fw-bold text-primary">@producto.Precio.ToString("C0")</span>
                            }
                        </div>

                        <hr>

                        <div class="product-details mb-3">
                            @if (!string.IsNullOrEmpty(producto.Descripcion))
                            {
                                <p>@Html.Raw(producto.Descripcion)</p>
                            }
                            else
                            {
                                <p class="text-muted">Sin descripción disponible para este producto.</p>
                            }
                        </div>

                        <div class="product-meta mb-4">
                            <div class="row">
                                <div class="col-6 mb-2">
                                    <span class="fw-bold">Marca:</span> @producto.Marca
                                </div>
                                <div class="col-6 mb-2">
                                    <span class="fw-bold">Contenido:</span> @producto.ContenidoNeto
                                </div>
                                <div class="col-6 mb-2">
                                    <span class="fw-bold">Disponibilidad:</span>
                                    @if (producto.Stock > 0)
                                    {
                                        <span class="text-success">En stock (@producto.Stock unidades)</span>
                                    }
                                    else
                                    {
                                        <span class="text-danger">Agotado</span>
                                    }
                                </div>
                                <div class="col-6 mb-2">
                                    <span class="fw-bold">Categoría:</span> @producto.Categoria
                                </div>
                            </div>
                        </div>

                        <div class="product-actions d-flex gap-3 flex-wrap mb-4">
                            <div class="quantity-selector d-flex align-items-center">
                                <button class="btn btn-outline-secondary" onclick="decreaseQuantity()">-</button>
                                <input type="number" id="quantity" class="form-control mx-2 text-center" value="1" min="1" max="@producto.Stock">
                                <button class="btn btn-outline-secondary" onclick="increaseQuantity(@producto.Stock)">+</button>
                            </div>

                            <button class="btn btn-primary flex-grow-1" @(producto.Stock <= 0 ? "disabled" : "")>
                                <i class="bi bi-cart-plus me-2"></i>Agregar al Carrito
                            </button>

                            <button class="btn btn-outline-danger">
                                <i class="bi bi-heart"></i>
                            </button>
                        </div>

                        <div class="product-shipping-info p-3 bg-light rounded">
                            <div class="d-flex align-items-center mb-2">
                                <i class="bi bi-truck fs-4 me-3 text-primary"></i>
                                <div>
                                    <span class="fw-bold">Envío gratis</span>
                                    <p class="mb-0 small">Para compras superiores a $30.000</p>
                                </div>
                            </div>
                            <div class="d-flex align-items-center">
                                <i class="bi bi-shield-check fs-4 me-3 text-primary"></i>
                                <div>
                                    <span class="fw-bold">Garantía de calidad</span>
                                    <p class="mb-0 small">Todos nuestros productos son originales y cuentan con garantía</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Detalles del producto con tabs -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body">
            <ul class="nav nav-tabs" id="productTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description-tab-pane" type="button" role="tab" aria-controls="description-tab-pane" aria-selected="true">
                        <i class="bi bi-info-circle me-2"></i>Detalles
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="indications-tab" data-bs-toggle="tab" data-bs-target="#indications-tab-pane" type="button" role="tab" aria-controls="indications-tab-pane" aria-selected="false">
                        <i class="bi bi-list-check me-2"></i>Indicaciones
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="ingredients-tab" data-bs-toggle="tab" data-bs-target="#ingredients-tab-pane" type="button" role="tab" aria-controls="ingredients-tab-pane" aria-selected="false">
                        <i class="bi bi-layers me-2"></i>Ingredientes
                    </button>
                </li>
            </ul>
            <div class="tab-content p-4" id="productTabContent">
                <div class="tab-pane fade show active" id="description-tab-pane" role="tabpanel" aria-labelledby="description-tab" tabindex="0">
                    @if (!string.IsNullOrEmpty(producto.Descripcion))
                    {
                        @Html.Raw(producto.Descripcion)
                    }
                    else
                    {
                        <p class="text-muted">No hay detalles disponibles para este producto.</p>
                    }
                </div>
                <div class="tab-pane fade" id="indications-tab-pane" role="tabpanel" aria-labelledby="indications-tab" tabindex="0">
                    @if (!string.IsNullOrEmpty(producto.Descripcion))
                    {
                        @Html.Raw(producto.Descripcion)
                    }
                    else
                    {
                        <p class="text-muted">No hay indicaciones disponibles para este producto.</p>
                    }
                </div>
                <div class="tab-pane fade" id="ingredients-tab-pane" role="tabpanel" aria-labelledby="ingredients-tab" tabindex="0">
                    <p>Ingredientes principales:</p>
                    <ul>
                        <li>Componente 1</li>
                        <li>Componente 2</li>
                        <li>Componente 3</li>
                    </ul>
                    <p class="small text-muted">Consulte con su médico antes de usar este producto si tiene condiciones preexistentes.</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Productos relacionados -->
    @if (Model.ProductosDestacados.Any())
    {
        <section class="related-products mb-4">
            <h3 class="mb-4"><i class="bi bi-link-45deg me-2"></i>Productos Relacionados</h3>

            <div class="row g-4">
                @foreach (var productoRelacionado in Model.ProductosDestacados)
                {
                    <div class="col-6 col-md-3">
                        <div class="card h-100 border-0 shadow-sm product-card">
                            <div class="position-relative">
                                <img src="@(string.IsNullOrEmpty(productoRelacionado.UrlImagen) ? "/Content/images/product-placeholder.jpg" : productoRelacionado.UrlImagen)"
                                     class="card-img-top" alt="@productoRelacionado.Nombre" style="height: 180px; object-fit: cover;">

                                @if (productoRelacionado.EsNuevo)
                                {
                                    <span class="position-absolute top-0 start-0 badge bg-success m-2">Nuevo</span>
                                }

                                @if (productoRelacionado.EsOferta)
                                {
                                    <span class="position-absolute top-0 end-0 badge bg-danger m-2">-@(productoRelacionado.PorcentajeDescuento * 100)%</span>
                                }
                            </div>
                            <div class="card-body p-3">
                                <h5 class="card-title product-title fw-bold mb-1" style="font-size: 0.9rem;">@productoRelacionado.Nombre</h5>
                                <p class="card-text mb-1 small text-muted">@productoRelacionado.Categoria</p>
                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <div class="price-section">
                                        @if (productoRelacionado.EsOferta)
                                        {
                                            <span class="text-decoration-line-through text-muted me-1 small">@productoRelacionado.PrecioOriginal.ToString("C0")</span>
                                        }
                                        <span class="fw-bold text-primary">@productoRelacionado.Precio.ToString("C0")</span>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer bg-white border-0 p-3">
                                <a href="@Url.Action("DetalleProducto", "Home", new { id = productoRelacionado.ID_Producto })" class="btn btn-outline-primary btn-sm d-block">
                                    <i class="bi bi-eye me-1"></i>Ver Detalles
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </section>
    }
</div>

@section scripts {
    <script>
        // Función para cambiar la imagen principal
        function changeMainImage(src) {
            document.getElementById('mainProductImage').src = src;

            // Actualiza la clase activa en las miniaturas
            document.querySelectorAll('.thumbnail-item').forEach(item => {
                if (item.querySelector('img').src === src) {
                    item.classList.add('active');
                } else {
                    item.classList.remove('active');
                }
            });
        }

        // Funciones para el selector de cantidad
        function decreaseQuantity() {
            var input = document.getElementById('quantity');
            var value = parseInt(input.value);
            if (value > 1) {
                input.value = value - 1;
            }
        }

        function increaseQuantity(maxStock) {
            var input = document.getElementById('quantity');
            var value = parseInt(input.value);
            if (value < maxStock) {
                input.value = value + 1;
            }
        }

        // Inicialización cuando se carga la página
        $(document).ready(function() {
            // Animación para las tarjetas de productos relacionados
            $('.product-card').hover(
                function() {
                    $(this).addClass('shadow');
                    $(this).find('.card-img-top').css('transform', 'scale(1.05)');
                    $(this).find('.card-img-top').css('transition', 'transform 0.3s ease');
                },
                function() {
                    $(this).removeClass('shadow');
                    $(this).find('.card-img-top').css('transform', 'scale(1)');
                }
            );

            // Zoom básico para la imagen principal
            $('#mainProductImage').on('mousemove', function(e) {
                var zoomer = e.currentTarget;
                var offsetX = e.offsetX ? e.offsetX : e.touches[0].pageX;
                var offsetY = e.offsetY ? e.offsetY : e.touches[0].pageY;
                var x = offsetX / zoomer.offsetWidth * 100;
                var y = offsetY / zoomer.offsetHeight * 100;
                zoomer.style.backgroundPosition = x + '% ' + y + '%';
            });
        });

        // Conectar el botón de "Agregar al Carrito" 
        $(document).ready(function() {
            // Botón de agregar al carrito en la página de detalle
            $('.product-actions .btn-primary').click(function(e) {
                e.preventDefault();

                var productId = @producto.ID_Producto;
                var quantity = parseInt($('#quantity').val());

                // Validar que la cantidad sea válida
                if (isNaN(quantity) || quantity < 1) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Cantidad inválida',
                        text: 'Por favor, ingresa una cantidad válida'
                    });
                    return;
                }

                // Verificar que haya stock disponible
                var stockDisponible = @producto.Stock;
                if (quantity > stockDisponible) {
                    Swal.fire({
                        icon: 'warning',
                        title: 'Stock insuficiente',
                        text: 'Solo hay ' + stockDisponible + ' unidades disponibles'
                    });
                    return;
                }

                // Verificar que el usuario esté logueado
                if (!isUserLoggedIn()) {
                    Swal.fire({
                        title: 'Iniciar sesión',
                        text: 'Debes iniciar sesión para añadir productos al carrito',
                        icon: 'info',
                        showCancelButton: true,
                        confirmButtonText: 'Iniciar sesión',
                        cancelButtonText: 'Cancelar'
                    }).then((result) => {
                        if (result.isConfirmed) {
                            window.location.href = '@Url.Action("Login", "Usuarios")';
                        }
                    });
                    return;
                }

                // Mostrar indicador de carga
                Swal.fire({
                    title: 'Añadiendo al carrito...',
                    allowOutsideClick: false,
                    didOpen: () => {
                        Swal.showLoading();
                    }
                });

                // Realizar la petición AJAX
                $.ajax({
                    url: '@Url.Action("AgregarAjax", "Carrito")',
                    type: 'POST',
                    data: {
                        idProducto: productId,
                        cantidad: quantity
                    },
                    success: function (response) {
                        if (response.success) {
                            // Actualizar contador del carrito
                            updateCartCounter(response.totalItems);

                            Swal.fire({
                                icon: 'success',
                                title: '¡Producto añadido!',
                                text: response.message,
                                showCancelButton: true,
                                confirmButtonText: 'Ver carrito',
                                cancelButtonText: 'Seguir comprando'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    window.location.href = '@Url.Action("Index", "Carrito")';
                                }
                            });
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Error',
                                text: response.message || 'Error al añadir el producto al carrito'
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Error',
                            text: 'Error de conexión. Por favor, intenta de nuevo.'
                        });
                    }
                });
            });

            // Función para verificar si el usuario está logueado
            function isUserLoggedIn() {
                // Verificar si existe la sesión de usuario
                return @(Session["UserID"] != null ? "true" : "false");
            }

            // Función para actualizar el contador del carrito
            function updateCartCounter(count) {
                // Actualizar badge en el icono del carrito
                var $badge = $('.nav-link .badge');
                if ($badge.length > 0) {
                    $badge.text(count);

                    // Animación para destacar el cambio
                    $badge.addClass('cart-badge-pulse');
                    setTimeout(function() {
                        $badge.removeClass('cart-badge-pulse');
                    }, 500);
                } else {
                    // Si no existe el badge, crearlo
                    $('.icon-badge').append('<span class="badge bg-danger cart-badge-pulse">' + count + '</span>');

                    setTimeout(function() {
                        $('.badge').removeClass('cart-badge-pulse');
                    }, 500);
                }
            }
        });
    </script>
}

<style>
    /* Estilos para la galería de imágenes */
    .product-gallery .main-image {
        text-align: center;
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 1rem;
    }

        .product-gallery .main-image img {
            max-height: 300px;
            width: auto;
            object-fit: contain;
        }

    .thumbnail-item {
        cursor: pointer;
        width: 60px;
        height: 60px;
        overflow: hidden;
        border-radius: 4px;
        transition: all 0.2s ease;
    }

        .thumbnail-item.active {
            border: 2px solid #4CAF50;
        }

        .thumbnail-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    /* Estilos para la información del producto */
    .product-title {
        display: -webkit-box;
        -webkit-line-clamp: 2;
        -webkit-box-orient: vertical;
        overflow: hidden;
    }

    .quantity-selector input {
        width: 60px;
    }

    /* Estilo para el zoom */
    #mainProductImage {
        background-repeat: no-repeat;
        background-position: center;
        transition: background-size 0.5s;
        cursor: zoom-in;
    }

        #mainProductImage:hover {
            background-size: 150%;
        }
</style>