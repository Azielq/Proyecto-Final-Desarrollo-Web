@model Proyecto_Final_Desarrollo_Web.ViewModels.TiendaViewModel

@{
    ViewBag.Title = Model.Productos[0].Nombre;
    var producto = Model.Productos[0];
}

<!-- Estilos para la galería de imágenes -->
<style>
    /* Estilos para la galería de imágenes */
    .product-gallery .main-image {
        background-color: #f8f9fa;
        border-radius: 8px;
        padding: 15px;
        display: flex;
        align-items: center;
        justify-content: center;
        height: 350px;
        margin-bottom: 15px;
    }

        .product-gallery .main-image img {
            max-height: 300px;
            max-width: 100%;
            object-fit: contain;
            transition: opacity 0.3s ease;
        }

    .thumbnail-item {
        cursor: pointer;
        width: 70px;
        height: 70px;
        overflow: hidden;
        border-radius: 8px;
        padding: 3px;
        background-color: #f8f9fa;
        transition: all 0.2s ease;
        border: 2px solid transparent;
    }

        .thumbnail-item.active {
            border-color: #4CAF50;
        }

        .thumbnail-item img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

    /* Estilos para los productos relacionados */
    .related-products .image-container {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 180px;
        background-color: #f8f9fa;
        padding: 10px;
        overflow: hidden;
    }

        .related-products .image-container img {
            max-height: 100%;
            max-width: 100%;
            object-fit: contain;
            transition: transform 0.3s ease;
        }

    .product-card:hover .image-container img {
        transform: scale(1.05);
    }

    /* Estilos para el selector de cantidad */
    .quantity-selector input {
        width: 60px;
    }

    /* Estilos para contenido TinyMCE */
    .tinymce-content img {
        max-width: 100%;
        height: auto;
        margin: 10px 0;
    }

    .tinymce-content h1,
    .tinymce-content h2,
    .tinymce-content h3,
    .tinymce-content h4,
    .tinymce-content h5,
    .tinymce-content h6 {
        margin-top: 1rem;
        margin-bottom: 0.5rem;
        font-weight: 600;
    }

    .tinymce-content p {
        margin-bottom: 1rem;
    }

    .tinymce-content ul,
    .tinymce-content ol {
        margin-bottom: 1rem;
        padding-left: 2rem;
    }

    .tinymce-content table {
        width: 100%;
        margin-bottom: 1rem;
        border-collapse: collapse;
    }

        .tinymce-content table th,
        .tinymce-content table td {
            padding: 0.5rem;
            border: 1px solid #dee2e6;
        }

        .tinymce-content table th {
            background-color: #f8f9fa;
            font-weight: 600;
        }

    .tinymce-content blockquote {
        padding: 0.5rem 1rem;
        margin-bottom: 1rem;
        border-left: 5px solid #4CAF50;
        background-color: #f8f9fa;
    }

    .tinymce-content iframe {
        max-width: 100%;
        margin: 1rem 0;
    }
</style>

<!-- Migas de pan -->
<nav aria-label="breadcrumb" class="bg-light py-3 mb-4">
    <div class="container">
        <ol class="breadcrumb m-0">
            <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Inicio</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Tienda", "Home")">Tienda</a></li>
            <li class="breadcrumb-item"><a href="@Url.Action("Tienda", "Home", new { filtro = new { CategoriaId = producto.ID_Categoria } })">@producto.Categoria</a></li>
            <li class="breadcrumb-item active" aria-current="page">@producto.Nombre</li>
        </ol>
    </div>
</nav>

<div class="container mb-5">
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body p-0">
            <div class="row g-0">
                <!-- Imagen del producto -->
                <div class="col-md-5">
                    <div class="product-gallery p-4">
                        <div class="main-image mb-3">
                            <div class="d-flex align-items-center justify-content-center" style="height: 350px;">
                                <img src="@(string.IsNullOrEmpty(producto.UrlImagen) ? "/Content/images/product-placeholder.jpg" : producto.UrlImagen)"
                                     class="img-fluid rounded" alt="@producto.Nombre" id="mainProductImage"
                                     style="max-height: 300px; max-width: 100%; object-fit: contain;">
                            </div>
                        </div>
                        <div class="thumbnails d-flex flex-wrap gap-2 justify-content-center">
                            <!-- Imagen principal como miniatura -->
                            <div class="thumbnail-item active">
                                <img src="@(string.IsNullOrEmpty(producto.UrlImagen) ? "/Content/images/product-placeholder.jpg" : producto.UrlImagen)"
                                     class="img-thumbnail" alt="@producto.Nombre"
                                     onclick="changeMainImage(this.src)">
                            </div>

                            <!-- Mostrar todas las imágenes disponibles del producto -->
                            @if (ViewBag.Imagenes != null && ViewBag.Imagenes.Count > 0)
                            {
                                foreach (var imagen in ViewBag.Imagenes)
                                {
                                    if (imagen.URL != producto.UrlImagen) // No repetir la imagen principal
                                    {
                                        <div class="thumbnail-item">
                                            <img src="@imagen.URL" class="img-thumbnail" alt="@(string.IsNullOrEmpty(imagen.Descripcion) ? producto.Nombre : imagen.Descripcion)"
                                                 onclick="changeMainImage(this.src)">
                                        </div>
                                    }
                                }
                            }
                        </div>
                    </div>
                </div>

                <!-- Información del producto -->
                <div class="col-md-7">
                    <div class="product-info p-4">
                        <h1 class="h2 mb-1">@producto.Nombre</h1>

                        <div class="mb-3">
                            <span class="badge bg-light text-dark me-2">@producto.Categoria</span>
                            @if (producto.EsNuevo)
                            {
                                <span class="badge bg-success me-2">Nuevo</span>
                            }
                            @if (producto.EsOferta)
                            {
                                <span class="badge bg-danger me-2">Oferta</span>
                            }
                            <span class="badge bg-primary">SKU: PROD-@producto.ID_Producto</span>
                        </div>

                        <div class="product-rating mb-3">
                            <span class="text-warning">
                                @for (int i = 1; i <= 5; i++)
                                {
                                    <i class="bi @(i <= Math.Floor(producto.Valoracion) ? "bi-star-fill" : (i <= producto.Valoracion ? "bi-star-half" : "bi-star"))"></i>
                                }
                            </span>
                            <span class="ms-2 text-muted">@producto.Valoracion de 5 (@producto.NumeroVentas ventas)</span>
                        </div>

                        <div class="product-price mb-3">
                            @if (producto.EsOferta)
                            {
                                <span class="text-decoration-line-through text-muted fs-5 me-2">@producto.PrecioOriginal.ToString("C0")</span>
                                <span class="fs-3 fw-bold text-danger">@producto.Precio.ToString("C0")</span>
                                <span class="ms-2 badge bg-danger">-@(producto.PorcentajeDescuento * 100)%</span>
                            }
                            else
                            {
                                <span class="fs-3 fw-bold text-primary">@producto.Precio.ToString("C0")</span>
                            }
                        </div>

                        <hr>

                        <div class="product-details mb-3 tinymce-content">
                            @if (!string.IsNullOrEmpty(producto.Descripcion))
                            {
                                @Html.Raw(producto.Descripcion)
                            }
                            else
                            {
                                <p class="text-muted">Sin descripción disponible para este producto.</p>
                            }
                        </div>

                        <div class="product-meta mb-4">
                            <div class="row">
                                <div class="col-6 mb-2">
                                    <span class="fw-bold">Marca:</span> @(string.IsNullOrEmpty(producto.Marca) ? "No especificada" : producto.Marca)
                                </div>
                                <div class="col-6 mb-2">
                                    <span class="fw-bold">Contenido:</span> @(string.IsNullOrEmpty(producto.ContenidoNeto) ? "No especificado" : producto.ContenidoNeto)
                                </div>
                                <div class="col-6 mb-2">
                                    <span class="fw-bold">Disponibilidad:</span>
                                    @if (producto.Stock > 0)
                                    {
                                        <span class="text-success">En stock (@producto.Stock unidades)</span>
                                    }
                                    else
                                    {
                                        <span class="text-danger">Agotado</span>
                                    }
                                </div>
                                <div class="col-6 mb-2">
                                    <span class="fw-bold">Categoría:</span> @producto.Categoria
                                </div>
                            </div>
                        </div>

                        <div class="product-actions d-flex gap-3 flex-wrap mb-4">
                            <div class="quantity-selector d-flex align-items-center">
                                <button class="btn btn-outline-secondary" onclick="decreaseQuantity()">-</button>
                                <input type="number" id="quantity" class="form-control mx-2 text-center" value="1" min="1" max="@producto.Stock">
                                <button class="btn btn-outline-secondary" onclick="increaseQuantity(@producto.Stock)">+</button>
                            </div>

                            <button class="btn btn-primary flex-grow-1 add-to-cart-btn"
                                    @(producto.Stock <= 0 ? "disabled" : "")
                                    data-product-id="@producto.ID_Producto"
                                    data-product-name="@producto.Nombre"
                                    data-product-price="@producto.Precio"
                                    data-product-image="@producto.UrlImagen">
                                <i class="bi bi-cart-plus me-2"></i>Agregar al Carrito
                            </button>

                            <button class="btn btn-outline-danger">
                                <i class="bi bi-heart"></i>
                            </button>
                        </div>

                        <div class="product-shipping-info p-3 bg-light rounded">
                            <div class="d-flex align-items-center mb-2">
                                <i class="bi bi-truck fs-4 me-3 text-primary"></i>
                                <div>
                                    <span class="fw-bold">Envío gratis</span>
                                    <p class="mb-0 small">Para compras superiores a ₡20.000</p>
                                </div>
                            </div>
                            <div class="d-flex align-items-center">
                                <i class="bi bi-shield-check fs-4 me-3 text-primary"></i>
                                <div>
                                    <span class="fw-bold">Garantía de calidad</span>
                                    <p class="mb-0 small">Todos nuestros productos son originales y cuentan con garantía</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Detalles del producto con tabs -->
    <div class="card border-0 shadow-sm mb-4">
        <div class="card-body">
            <ul class="nav nav-tabs" id="productTab" role="tablist">
                <li class="nav-item" role="presentation">
                    <button class="nav-link active" id="description-tab" data-bs-toggle="tab" data-bs-target="#description-tab-pane" type="button" role="tab" aria-controls="description-tab-pane" aria-selected="true">
                        <i class="bi bi-info-circle me-2"></i>Detalles
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="indications-tab" data-bs-toggle="tab" data-bs-target="#indications-tab-pane" type="button" role="tab" aria-controls="indications-tab-pane" aria-selected="false">
                        <i class="bi bi-list-check me-2"></i>Indicaciones
                    </button>
                </li>
                <li class="nav-item" role="presentation">
                    <button class="nav-link" id="ingredients-tab" data-bs-toggle="tab" data-bs-target="#ingredients-tab-pane" type="button" role="tab" aria-controls="ingredients-tab-pane" aria-selected="false">
                        <i class="bi bi-layers me-2"></i>Ingredientes
                    </button>
                </li>
            </ul>
            <div class="tab-content p-4" id="productTabContent">
                <div class="tab-pane fade show active tinymce-content" id="description-tab-pane" role="tabpanel" aria-labelledby="description-tab" tabindex="0">
                    @if (!string.IsNullOrEmpty(producto.Descripcion))
                    {
                        @Html.Raw(producto.Descripcion)
                    }
                    else
                    {
                        <p class="text-muted">No hay detalles disponibles para este producto.</p>
                    }
                </div>
                <div class="tab-pane fade tinymce-content" id="indications-tab-pane" role="tabpanel" aria-labelledby="indications-tab" tabindex="0">
                    @if (!string.IsNullOrEmpty(producto.Indicaciones))
                    {
                        @Html.Raw(producto.Indicaciones)
                    }
                    else
                    {
                        <p class="text-muted">No hay indicaciones disponibles para este producto.</p>
                    }
                </div>
                <div class="tab-pane fade tinymce-content" id="ingredients-tab-pane" role="tabpanel" aria-labelledby="ingredients-tab" tabindex="0">
                    @if (!string.IsNullOrEmpty(producto.Ingredientes))
                    {
                        @Html.Raw(producto.Ingredientes)
                    }
                    else
                    {
                        <p class="text-muted">No hay información de ingredientes disponible para este producto.</p>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Productos relacionados -->
    @if (Model.ProductosDestacados.Any())
    {
        <section class="related-products mb-4">
            <h3 class="mb-4"><i class="bi bi-link-45deg me-2"></i>Productos Relacionados</h3>

            <div class="row g-4">
                @foreach (var productoRelacionado in Model.ProductosDestacados)
                {
                    <div class="col-6 col-md-3">
                        <div class="card h-100 border-0 shadow-sm product-card">
                            <div class="position-relative">
                                <div class="image-container">
                                    <img src="@(string.IsNullOrEmpty(productoRelacionado.UrlImagen) ? "/Content/images/product-placeholder.jpg" : productoRelacionado.UrlImagen)"
                                         class="img-fluid" alt="@productoRelacionado.Nombre">
                                </div>

                                @if (productoRelacionado.EsNuevo)
                                {
                                    <span class="position-absolute top-0 start-0 badge bg-success m-2">Nuevo</span>
                                }

                                @if (productoRelacionado.EsOferta)
                                {
                                    <span class="position-absolute top-0 end-0 badge bg-danger m-2">-@(productoRelacionado.PorcentajeDescuento * 100)%</span>
                                }
                            </div>
                            <div class="card-body p-3">
                                <h5 class="card-title product-title fw-bold mb-1" style="font-size: 0.9rem;">@productoRelacionado.Nombre</h5>
                                <p class="card-text mb-1 small text-muted">@productoRelacionado.Categoria</p>
                                <div class="d-flex justify-content-between align-items-center mt-2">
                                    <div class="price-section">
                                        @if (productoRelacionado.EsOferta)
                                        {
                                            <span class="text-decoration-line-through text-muted me-1 small">@productoRelacionado.PrecioOriginal.ToString("C0")</span>
                                        }
                                        <span class="fw-bold text-primary">@productoRelacionado.Precio.ToString("C0")</span>
                                    </div>
                                </div>
                            </div>
                            <div class="card-footer bg-white border-0 p-3">
                                <a href="@Url.Action("DetalleProducto", "Home", new { id = productoRelacionado.ID_Producto })" class="btn btn-outline-primary btn-sm d-block">
                                    <i class="bi bi-eye me-1"></i>Ver Detalles
                                </a>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </section>
    }
</div>

<!-- Modal para añadir al carrito -->
<div class="modal fade" id="addToCartModal" tabindex="-1" aria-labelledby="addToCartModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header bg-primary text-white">
                <h5 class="modal-title" id="addToCartModalLabel">Añadir al carrito</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="d-flex align-items-center">
                    <img id="modalProductImage" src="" alt="Producto" class="img-thumbnail me-3" style="width: 80px; height: 80px; object-fit: cover;">
                    <div>
                        <h6 id="modalProductName" class="mb-1"></h6>
                        <p class="mb-0">Precio: <span id="modalProductPrice" class="fw-bold"></span></p>
                    </div>
                </div>
                <div class="mt-3">
                    <label for="modalQuantity" class="form-label">Cantidad:</label>
                    <div class="input-group">
                        <button class="btn btn-outline-secondary" type="button" id="decreaseModalQuantity">-</button>
                        <input type="number" class="form-control text-center" id="modalQuantity" value="1" min="1">
                        <button class="btn btn-outline-secondary" type="button" id="increaseModalQuantity">+</button>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                <button type="button" class="btn btn-primary" id="confirmAddToCart">
                    <i class="bi bi-cart-check me-2"></i>Añadir al carrito
                </button>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        // Función para cambiar la imagen principal
        function changeMainImage(src) {
            // Almacena la imagen principal actual
            const mainImage = document.getElementById('mainProductImage');
            const currentSrc = mainImage.src;

            // No hace nada si estamos haciendo clic en la misma imagen
            if (currentSrc === src) return;

            // Actualiza la clase activa en las miniaturas
            $('.thumbnail-item').removeClass('active');
            $(`.thumbnail-item img[src="${src}"]`).parent().addClass('active');

            // Aplica efecto de transición
            $('#mainProductImage').css('opacity', 0.5);

            // Cambia la imagen después de un breve retraso para el efecto visual
            setTimeout(function() {
                mainImage.src = src;

                // Espera a que la nueva imagen se cargue antes de mostrarla
                mainImage.onload = function() {
                    $('#mainProductImage').css('opacity', 1);
                };

                // Por si la imagen ya estaba en caché y el evento onload no se dispara
                setTimeout(function() {
                    $('#mainProductImage').css('opacity', 1);
                }, 50);

            }, 200);
        }

        // Funciones para el selector de cantidad
        function decreaseQuantity() {
            var input = document.getElementById('quantity');
            var value = parseInt(input.value);
            if (value > 1) {
                input.value = value - 1;
            }
        }

        function increaseQuantity(maxStock) {
            var input = document.getElementById('quantity');
            var value = parseInt(input.value);
            if (value < maxStock) {
                input.value = value + 1;
            }
        }

        $(document).ready(function() {
            // Aplica el efecto zoom en hover para la imagen principal
            $('#mainProductImage').parent().hover(
                function(e) {
                    $(this).css('cursor', 'zoom-in');
                },
                function() {
                    $(this).css('cursor', 'default');
                }
            );

            // Aplicar efecto de zoom al hacer clic en la imagen principal
            $('#mainProductImage').on('click', function() {
                const src = $(this).attr('src');

                // Crea un modal para mostrar la imagen en tamaño completo
                $('body').append(`
                    <div class="modal fade" id="imageZoomModal" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                </div>
                                <div class="modal-body text-center p-0">
                                    <img src="${src}" class="img-fluid" alt="Imagen ampliada">
                                </div>
                            </div>
                        </div>
                    </div>
                `);

                // Muestra el modal
                var modal = new bootstrap.Modal(document.getElementById('imageZoomModal'));
                modal.show();

                // Elimina el modal al cerrarlo para evitar duplicados
                $('#imageZoomModal').on('hidden.bs.modal', function() {
                    $(this).remove();
                });
            });

            // Efecto de hover para las miniaturas
            $('.thumbnail-item').hover(
                function() {
                    $(this).css('transform', 'scale(1.05)');
                    $(this).css('box-shadow', '0 4px 8px rgba(0,0,0,0.1)');
                },
                function() {
                    $(this).css('transform', 'scale(1)');
                    $(this).css('box-shadow', 'none');
                }
            );

            // Animación para las tarjetas de productos relacionados
            $('.product-card').hover(
                function() {
                    $(this).addClass('shadow');
                    $(this).find('.image-container img').css('transform', 'scale(1.05)');
                    $(this).find('.image-container img').css('transition', 'transform 0.3s ease');
                },
                function() {
                    $(this).removeClass('shadow');
                    $(this).find('.image-container img').css('transform', 'scale(1)');
                }
            );

            // Modal para añadir al carrito
            $('.add-to-cart-btn').click(function() {
                var productId = $(this).data('product-id');
                var productName = $(this).data('product-name');
                var productPrice = $(this).data('product-price');
                var productImage = $(this).data('product-image');
                var quantity = $('#quantity').val();

                if (!productImage || productImage === '') {
                    productImage = '/Content/images/product-placeholder.jpg';
                }

                $('#modalProductName').text(productName);
                $('#modalProductPrice').text(new Intl.NumberFormat('es-CO', { style: 'currency', currency: 'COP' }).format(productPrice));
                $('#modalProductImage').attr('src', productImage);
                $('#modalQuantity').val(quantity);
                $('#addToCartModal').modal('show');
            });

            // Incrementar y decrementar cantidad en el modal
            $('#increaseModalQuantity').click(function() {
                var currentVal = parseInt($('#modalQuantity').val());
                $('#modalQuantity').val(currentVal + 1);
            });

            $('#decreaseModalQuantity').click(function() {
                var currentVal = parseInt($('#modalQuantity').val());
                if (currentVal > 1) {
                    $('#modalQuantity').val(currentVal - 1);
                }
            });

            // Solo permitir números en el campo de cantidad
            $('#modalQuantity, #quantity').on('input', function() {
                var value = $(this).val();
                value = value.replace(/[^0-9]/g, '');
                if (value === '' || parseInt(value) < 1) {
                    value = 1;
                }

                // Verificar que no supere el stock disponible
                var maxStock = @producto.Stock;
                if (parseInt(value) > maxStock) {
                    value = maxStock;
                }

                $(this).val(value);
            });

            // Confirmar añadir al carrito
            $('#confirmAddToCart').click(function() {
                var productId = @producto.ID_Producto;
                var quantity = parseInt($('#modalQuantity').val());

                // Aquí iría el código para añadir al carrito mediante AJAX
                $.ajax({
                    url: '/Carrito/Agregar',
                    type: 'POST',
                    data: {
                        id: productId,
                        cantidad: quantity
                    },
                    success: function(response) {
                        if (response.success) {
                            // Actualizar contador del carrito
                            updateCartCounter(response.totalItems);

                            // Mostrar mensaje de éxito
                            showNotification('Producto añadido al carrito', 'success');

                            // Cerrar modal
                            $('#addToCartModal').modal('hide');
                        } else {
                            showNotification(response.message || 'Error al añadir el producto', 'danger');
                        }
                    },
                    error: function() {
                        showNotification('Error de conexión. Inténtalo de nuevo.', 'danger');
                    }
                });
            });

            // Función para mostrar notificaciones
            function showNotification(message, type) {
                var notificationHtml = '<div class="toast align-items-center text-white bg-' + type + ' border-0" role="alert" aria-live="assertive" aria-atomic="true">' +
                    '<div class="d-flex">' +
                    '<div class="toast-body">' + message + '</div>' +
                    '<button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Close"></button>' +
                    '</div></div>';

                var notificationContainer = $('.toast-container');
                if (notificationContainer.length === 0) {
                    $('body').append('<div class="toast-container position-fixed bottom-0 end-0 p-3"></div>');
                    notificationContainer = $('.toast-container');
                }

                notificationContainer.append(notificationHtml);
                var toast = new bootstrap.Toast(notificationContainer.find('.toast:last-child')[0], {
                    autohide: true,
                    delay: 3000
                });
                toast.show();
            }

            // Función para actualizar el contador del carrito
            function updateCartCounter(count) {
                var cartCounter = $('#cartCounter');
                if (cartCounter.length > 0) {
                    cartCounter.text(count);

                    // Efecto de animación
                    cartCounter.addClass('cart-counter-animation');
                    setTimeout(function() {
                        cartCounter.removeClass('cart-counter-animation');
                    }, 500);
                }
            }
        });
    </script>
}