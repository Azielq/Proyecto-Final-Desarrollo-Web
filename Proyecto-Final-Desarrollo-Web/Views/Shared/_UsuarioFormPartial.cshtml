@model Proyecto_Final_Desarrollo_Web.ViewModels.UsuarioViewModel

<div class="card mb-4">
    <div class="card-header bg-@ViewBag.CardHeaderClass text-white">
        <h5 class="mb-0"><i class="bi bi-person-badge me-2"></i>Información personal</h5>
    </div>
    <div class="card-body">
        <div class="row">
            <div class="col-md-4 mb-3">
                <label for="Nombre" class="form-label">
                    <i class="bi bi-person-fill me-2"></i>@Html.DisplayNameFor(m => m.Nombre)
                </label>
                @Html.TextBoxFor(m => m.Nombre, new { @class = "form-control", placeholder = "Ingrese su nombre" })
                @Html.ValidationMessageFor(m => m.Nombre, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label for="Apellido_1" class="form-label">
                    <i class="bi bi-person-fill me-2"></i>@Html.DisplayNameFor(m => m.Apellido_1)
                </label>
                @Html.TextBoxFor(m => m.Apellido_1, new { @class = "form-control", placeholder = "Ingrese primer apellido" })
                @Html.ValidationMessageFor(m => m.Apellido_1, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-4 mb-3">
                <label for="Apellido_2" class="form-label">
                    <i class="bi bi-person-fill me-2"></i>@Html.DisplayNameFor(m => m.Apellido_2)
                </label>
                @Html.TextBoxFor(m => m.Apellido_2, new { @class = "form-control", placeholder = "Ingrese segundo apellido" })
                @Html.ValidationMessageFor(m => m.Apellido_2, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="tipo_documento" class="form-label">
                    <i class="bi bi-card-text me-2"></i>@Html.DisplayNameFor(m => m.tipo_documento)
                </label>
                @Html.DropDownListFor(m => m.tipo_documento, new List<SelectListItem>
                {
                    new SelectListItem { Text = "Seleccione...", Value = "" },
                    new SelectListItem { Text = "DNI", Value = "DNI" },
                    new SelectListItem { Text = "Pasaporte", Value = "Pasaporte" },
                    new SelectListItem { Text = "Cédula", Value = "Cedula" }
                }, new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.tipo_documento, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6 mb-3">
                <label for="numero_documento" class="form-label">
                    <i class="bi bi-123 me-2"></i>@Html.DisplayNameFor(m => m.numero_documento)
                </label>
                @Html.TextBoxFor(m => m.numero_documento, new { @class = "form-control", placeholder = "Ingrese número de documento" })
                @Html.ValidationMessageFor(m => m.numero_documento, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="Correo" class="form-label">
                    <i class="bi bi-envelope-fill me-2"></i>@Html.DisplayNameFor(m => m.Correo)
                </label>
                @Html.TextBoxFor(m => m.Correo, new { @class = "form-control", placeholder = "ejemplo@correo.com", type = "email" })
                @Html.ValidationMessageFor(m => m.Correo, "", new { @class = "text-danger" })
            </div>
            <div class="col-md-6 mb-3">
                <label for="Teléfono" class="form-label">
                    <i class="bi bi-telephone-fill me-2"></i>@Html.DisplayNameFor(m => m.Teléfono)
                </label>
                @Html.TextBoxFor(m => m.Teléfono, new { @class = "form-control", placeholder = "(123) 456-7890" })
                @Html.ValidationMessageFor(m => m.Teléfono, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="mb-3">
            <label for="dirección" class="form-label">
                <i class="bi bi-geo-alt-fill me-2"></i>@Html.DisplayNameFor(m => m.dirección)
            </label>
            @Html.TextBoxFor(m => m.dirección, new { @class = "form-control", placeholder = "Ingrese su dirección" })
            @Html.ValidationMessageFor(m => m.dirección, "", new { @class = "text-danger" })
        </div>
    </div>
</div>

<div class="card mb-4">
    <div class="card-header bg-@ViewBag.CardHeaderClass text-white">
        <h5 class="mb-0"><i class="bi bi-shield-lock me-2"></i>Información de cuenta</h5>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <label for="usuario" class="form-label">
                <i class="bi bi-person-fill me-2"></i>@Html.DisplayNameFor(m => m.usuario)
            </label>
            @Html.TextBoxFor(m => m.usuario, new { @class = "form-control", placeholder = "Ingrese nombre de usuario" })
            @Html.ValidationMessageFor(m => m.usuario, "", new { @class = "text-danger" })
        </div>

        @if (ViewBag.IsAdmin && ViewBag.MostrarRol)
        {
            <div class="mb-3">
                <label for="ID_Rol" class="form-label">
                    <i class="bi bi-person-badge-fill me-2"></i>@Html.DisplayNameFor(m => m.ID_Rol)
                </label>
                @Html.DropDownListFor(m => m.ID_Rol, (SelectList)ViewBag.ID_Rol, "Seleccione Rol...", new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.ID_Rol, "", new { @class = "text-danger" })
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.ID_Rol)
        }

        <div class="row">
            <div class="col-md-6 mb-3">
                <label for="Password" class="form-label">
                    <i class="bi bi-lock-fill me-2"></i>@Html.DisplayNameFor(m => m.Password)
                </label>
                <div class="input-group">
                    @Html.PasswordFor(m => m.Password, new { @class = "form-control", placeholder = ViewBag.IsEdit ? "Dejar en blanco para mantener actual" : "Ingrese contraseña", id = "Password" })
                    <button class="btn btn-outline-secondary toggle-password" type="button" tabindex="-1" data-for="Password">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
                @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                @if (ViewBag.IsEdit)
                {
                    <div class="form-text text-muted">
                        <i class="bi bi-info-circle me-1"></i>Deje en blanco para mantener la contraseña actual
                    </div>
                }
            </div>
            <div class="col-md-6 mb-3">
                <label for="ConfirmPassword" class="form-label">
                    <i class="bi bi-lock-fill me-2"></i>@Html.DisplayNameFor(m => m.ConfirmPassword)
                </label>
                <div class="input-group">
                    @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control", placeholder = "Confirme contraseña", id = "ConfirmPassword" })
                    <button class="btn btn-outline-secondary toggle-password" type="button" tabindex="-1" data-for="ConfirmPassword">
                        <i class="bi bi-eye"></i>
                    </button>
                </div>
                @Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })
            </div>
        </div>

        <!-- Componente de fortaleza de contraseña -->
        <div class="password-strength mb-4" id="passwordStrength">
            <h6>Fortaleza de la contraseña: <span id="strengthText">No ingresada</span></h6>
            <div class="progress">
                <div id="strengthBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
            <div class="mt-2">
                <small class="text-muted">
                    <i class="bi bi-info-circle me-1"></i>La contraseña debe incluir al menos 6 caracteres, una letra mayúscula, una minúscula, un número y un carácter especial.
                </small>
            </div>
        </div>

        @if (ViewBag.IsAdmin && ViewBag.IsEdit)
        {
            <div class="mb-3">
                <label for="estado" class="form-label">
                    <i class="bi bi-toggle-on me-2"></i>@Html.DisplayNameFor(m => m.estado)
                </label>
                @Html.DropDownListFor(m => m.estado, new List<SelectListItem>
                {
                    new SelectListItem { Text = "Activo", Value = "1" },
                    new SelectListItem { Text = "Inactivo", Value = "0" },
                    new SelectListItem { Text = "Bloqueado", Value = "2" }
                }, new { @class = "form-select" })
                @Html.ValidationMessageFor(m => m.estado, "", new { @class = "text-danger" })
            </div>
        }
        else
        {
            @Html.HiddenFor(m => m.estado)
        }
    </div>
</div>