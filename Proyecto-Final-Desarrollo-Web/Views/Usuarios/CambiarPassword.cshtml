@model Proyecto_Final_Desarrollo_Web.ViewModels.CambiarPasswordViewModel
@{
    ViewBag.Title = "Cambiar Contraseña - FarmaU";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-8">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item"><a href="@Url.Action("Details", "Usuarios", new { id = Model.ID_Usuario })">Mi Perfil</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Cambiar Contraseña</li>
                </ol>
            </nav>

            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0"><i class="bi bi-shield-lock me-2"></i>Cambiar Contraseña</h4>
                </div>
                <div class="card-body">
                    @if (!ViewData.ModelState.IsValid)
                    {
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>
                            <strong>Error:</strong>
                            @Html.ValidationSummary(false, "", new { @class = "mb-0 list-unstyled" })
                        </div>
                    }

                    @using (Html.BeginForm("CambiarPassword", "Usuarios", FormMethod.Post, new
                    {
                        @class = "needs-validation",
                        id = "formCambiarPassword",
                        data_confirm_submit = "true",
                        data_confirm_title = "Confirmar cambio de contraseña",
                        data_confirm_text = "¿Estás seguro de que deseas cambiar tu contraseña?",
                        data_confirm_button_text = "Sí, cambiar contraseña"
                    }))
                    {
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.ID_Usuario)
                        @Html.HiddenFor(model => model.usuario)

                        <div class="alert alert-info mb-4">
                            <div class="d-flex">
                                <div class="me-3">
                                    <i class="bi bi-info-circle-fill fs-3"></i>
                                </div>
                                <div>
                                    <h5>Información de Usuario</h5>
                                    <p class="mb-0">Estás cambiando la contraseña para: <strong>@Model.usuario</strong> (@Model.Nombre @Model.Apellido_1)</p>
                                </div>
                            </div>
                        </div>

                        <div class="mb-4">
                            <h5 class="border-bottom pb-2 mb-3">Requisitos de seguridad</h5>
                            <ul class="text-muted small">
                                <li>La contraseña debe tener al menos 6 caracteres</li>
                                <li>Debe incluir al menos una letra mayúscula</li>
                                <li>Debe incluir al menos una letra minúscula</li>
                                <li>Debe incluir al menos un número</li>
                                <li>Debe incluir al menos un carácter especial</li>
                                <li>Evite usar información personal fácil de adivinar</li>
                            </ul>
                        </div>

                        if (Session["UserID"] != null && (Convert.ToInt32(Session["UserID"]) == Model.ID_Usuario || Convert.ToInt32(Session["UserRoleID"]) != 1))
                        {
                            <div class="mb-3">
                                <label for="CurrentPassword" class="form-label">
                                    <i class="bi bi-lock-fill me-2"></i>@Html.DisplayNameFor(model => model.CurrentPassword)
                                </label>
                                <div class="input-group">
                                    <span class="input-group-text"><i class="bi bi-key"></i></span>
                                    @Html.PasswordFor(model => model.CurrentPassword, new { @class = "form-control", placeholder = "Ingrese su contraseña actual", id = "CurrentPassword" })
                                    <button class="btn btn-outline-secondary toggle-password" type="button" tabindex="-1" data-for="CurrentPassword">
                                        <i class="bi bi-eye"></i>
                                    </button>
                                </div>
                                @Html.ValidationMessageFor(model => model.CurrentPassword, "", new { @class = "text-danger" })
                            </div>
                        }

                        <div class="mb-3">
                            <label for="Password" class="form-label">
                                <i class="bi bi-lock-fill me-2"></i>@Html.DisplayNameFor(model => model.Password)
                            </label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-key"></i></span>
                                @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Ingrese nueva contraseña", id = "Password" })
                                <button class="btn btn-outline-secondary toggle-password" type="button" tabindex="-1" data-for="Password">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="mb-4">
                            <label for="ConfirmPassword" class="form-label">
                                <i class="bi bi-lock-fill me-2"></i>@Html.DisplayNameFor(model => model.ConfirmPassword)
                            </label>
                            <div class="input-group">
                                <span class="input-group-text"><i class="bi bi-key-fill"></i></span>
                                @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control", placeholder = "Confirme nueva contraseña", id = "ConfirmPassword" })
                                <button class="btn btn-outline-secondary toggle-password" type="button" tabindex="-1" data-for="ConfirmPassword">
                                    <i class="bi bi-eye"></i>
                                </button>
                            </div>
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>

                        <div class="password-strength mb-4" id="passwordStrength">
                            <h6>Fortaleza de la contraseña: <span id="strengthText">No ingresada</span></h6>
                            <div class="progress">
                                <div id="strengthBar" class="progress-bar" role="progressbar" style="width: 0%;" aria-valuenow="0" aria-valuemin="0" aria-valuemax="100"></div>
                            </div>
                            <div class="mt-2">
                                <small class="text-muted">
                                    <i class="bi bi-info-circle me-1"></i>La contraseña debe incluir al menos 6 caracteres, una letra mayúscula, una minúscula, un número y un carácter especial.
                                </small>
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            <a href="@Url.Action("Details", "Usuarios", new { id = Model.ID_Usuario })" class="btn btn-secondary">
                                <i class="bi bi-x-circle me-1"></i>Cancelar
                            </a>
                            <button type="submit" class="btn btn-primary">
                                <i class="bi bi-check-circle me-1"></i>Guardar Cambios
                            </button>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}