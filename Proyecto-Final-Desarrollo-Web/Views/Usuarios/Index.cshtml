@model List<Proyecto_Final_Desarrollo_Web.TableViewModels.UsuarioTableViewModel>
@using Proyecto_Final_Desarrollo_Web.Helpers
@{
    ViewBag.Title = "Gestión de Usuarios - FarmaU";
}

<div class="container">
    <div class="row">
        <div class="col-md-12">
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Home</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Usuarios</li>
                </ol>
            </nav>

            <div class="card shadow-sm mb-4">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0"><i class="bi bi-people-fill me-2"></i>Gestión de Usuarios</h4>
                        <a href="@Url.Action("Create", "Usuarios")" class="btn btn-light">
                            <i class="bi bi-person-plus-fill me-1"></i>Crear Usuario
                        </a>
                    </div>
                </div>
                <div class="card-body">
                    @if (ViewBag.ErrorMessage != null)
                    {
                        <div class="alert alert-danger">
                            <i class="bi bi-exclamation-triangle-fill me-2"></i>@ViewBag.ErrorMessage
                        </div>
                    }

                    <div class="mb-4">
                        <form method="get" action="@Url.Action("Index", "Usuarios")" id="filterForm">
                            <div class="row">
                                <div class="col-md-4 mb-3 mb-md-0">
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="bi bi-search"></i></span>
                                        <input type="text" id="searchTerm" name="searchTerm" class="form-control"
                                               placeholder="Buscar usuarios..." value="@ViewBag.SearchTerm">
                                    </div>
                                </div>
                                <div class="col-md-3 mb-3 mb-md-0">
                                    <select id="rolId" name="rolId" class="form-select">
                                        <option value="">Todos los roles</option>
                                        @foreach (var rol in ViewBag.Roles)
                                        {
                                            <option value="@rol.Value" @(ViewBag.RolId != null && ViewBag.RolId.ToString() == rol.Value ? "selected" : "")>@rol.Text</option>
                                        }
                                    </select>
                                </div>
                                <div class="col-md-3 mb-3 mb-md-0">
                                    <select id="estado" name="estado" class="form-select">
                                        <option value="">Todos los estados</option>
                                        <option value="1" @(ViewBag.Estado != null && ViewBag.Estado.ToString() == "1" ? "selected" : "")>Activo</option>
                                        <option value="0" @(ViewBag.Estado != null && ViewBag.Estado.ToString() == "0" ? "selected" : "")>Inactivo</option>
                                        <option value="2" @(ViewBag.Estado != null && ViewBag.Estado.ToString() == "2" ? "selected" : "")>Bloqueado</option>
                                    </select>
                                </div>
                                <div class="col-md-2">
                                    <div class="d-flex gap-2">
                                        <button type="submit" class="btn btn-primary">
                                            <i class="bi bi-funnel me-1"></i>Filtrar
                                        </button>
                                        <button type="button" id="btnReset" class="btn btn-secondary flex-grow-1">
                                            <i class="bi bi-arrow-counterclockwise me-1"></i>Limpiar
                                        </button>
                                    </div>
                                </div>
                            </div>
                            <!-- Hace que conserve los parámetros de paginación -->
                            <input type="hidden" name="page" value="1" />
                            <input type="hidden" name="pageSize" value="@ViewData["PageSize"]" />
                        </form>
                    </div>

                    <div class="table-responsive">
                        <table id="usuariosTable" class="table table-striped table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th><i class="bi bi-person me-1"></i>Usuario</th>
                                    <th><i class="bi bi-person-vcard me-1"></i>Nombre</th>
                                    <th><i class="bi bi-person-badge me-1"></i>Rol</th>
                                    <th><i class="bi bi-envelope me-1"></i>Correo</th>
                                    <th><i class="bi bi-toggle-on me-1"></i>Estado</th>
                                    <th><i class="bi bi-clock-history me-1"></i>Último acceso</th>
                                    <th><i class="bi bi-gear-fill me-1"></i>Acciones</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Count == 0)
                                {
                                    <tr>
                                        <td colspan="7" class="text-center py-4">
                                            <i class="bi bi-info-circle text-muted me-2"></i>No se encontraron usuarios con los criterios de búsqueda especificados.
                                        </td>
                                    </tr>
                                }
                                else
                                {
                                    foreach (var user in Model)
                                    {
                                        <tr>
                                            <td>@user.usuario</td>
                                            <td>@user.NombreCompleto</td>
                                            <td>@user.NombreRol</td>
                                            <td>@user.Correo</td>
                                            <td>
                                                @if (user.estado == 1)
                                                {
                                                    <span class="badge bg-success">Activo</span>
                                                }
                                                else if (user.estado == 0)
                                                {
                                                    <span class="badge bg-danger">Inactivo</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-warning">Bloqueado</span>
                                                }
                                            </td>
                                            <td>@(user.ultimo_login.HasValue ? user.ultimo_login.Value.ToString("dd/MM/yyyy HH:mm") : "Nunca")</td>
                                            <td>
                                                <div class="d-flex gap-1">
                                                    <a href="@Url.Action("Details", "Usuarios", new { id = user.ID_Usuario })" class="btn btn-sm btn-info" data-bs-toggle="tooltip" title="Ver detalles">
                                                        <i class="bi bi-eye"></i>
                                                    </a>
                                                    <a href="@Url.Action("Edit", "Usuarios", new { id = user.ID_Usuario })" class="btn btn-sm btn-primary" data-bs-toggle="tooltip" title="Editar">
                                                        <i class="bi bi-pencil"></i>
                                                    </a>
                                                    <button type="button" class="btn btn-sm @(user.estado == 1 ? "btn-danger" : "btn-success")"
                                                            onclick="cambiarEstadoUsuario(@user.ID_Usuario, '@user.usuario', @user.estado)"
                                                            data-bs-toggle="tooltip"
                                                            title="@(user.estado == 1 ? "Desactivar" : "Activar")">
                                                        <i class="bi bi-@(user.estado == 1 ? "toggle-off" : "toggle-on")"></i>
                                                    </button>
                                                    <a href="@Url.Action("CambiarPassword", "Usuarios", new { id = user.ID_Usuario })" class="btn btn-sm btn-warning" data-bs-toggle="tooltip" title="Cambiar contraseña">
                                                        <i class="bi bi-shield-lock"></i>
                                                    </a>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>

                    <!-- Controles de paginación usando el helper -->
                    @Html.RenderPagination(
                             (int)ViewData["CurrentPage"],
                             (int)ViewData["TotalPages"],
                             (int)ViewData["PageSize"],
                             "Index",
                             "Usuarios",
                             new
                             {
                                 searchTerm = ViewBag.SearchTerm,
                                 rolId = ViewBag.RolId,
                                 estado = ViewBag.Estado
                             }
                         )
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts {
    <script>
        $(document).ready(function () {
            // Inicializa tooltips
            $('[data-bs-toggle="tooltip"]').tooltip();

            // Función para aplicar todos los filtros
            function aplicarFiltros() {
                var textoBusqueda = $('#searchTerm').val().toLowerCase();
                var rolSeleccionado = $('#rolId').val() === '' ? '' : $('#rolId option:selected').text();
                var estadoSeleccionado = '';

                if ($('#estado').val() === '1') estadoSeleccionado = 'Activo';
                else if ($('#estado').val() === '0') estadoSeleccionado = 'Inactivo';
                else if ($('#estado').val() === '2') estadoSeleccionado = 'Bloqueado';

                $('#usuariosTable tbody tr').each(function () {
                    var fila = $(this);
                    var mostrarFila = true;

                    // Filtro de texto de búsqueda
                    if (textoBusqueda.length > 0) {
                        var contenidoFila = fila.text().toLowerCase();
                        if (!contenidoFila.includes(textoBusqueda)) {
                            mostrarFila = false;
                        }
                    }

                    // Filtro de rol
                    if (rolSeleccionado && mostrarFila) {
                        var rolFila = fila.find('td:eq(2)').text().trim();
                        if (rolFila !== rolSeleccionado) {
                            mostrarFila = false;
                        }
                    }

                    // Filtro de estado
                    if (estadoSeleccionado && mostrarFila) {
                        var estadoFila = fila.find('td:eq(4)').text().trim();
                        if (!estadoFila.includes(estadoSeleccionado)) {
                            mostrarFila = false;
                        }
                    }

                    // Esto muestra u oculta la fila según el resultado
                    fila.toggle(mostrarFila);
                });
            }

            // Eventos para aplicar filtros (actualizar estos selectores)
            $('#searchTerm').on('keyup', aplicarFiltros);
            $('#rolId, #estado').on('change', aplicarFiltros);

            // Botón para limpiar filtros
            $('#btnReset').on('click', function () {
                $('#searchTerm').val('');
                $('#rolId').val('');
                $('#estado').val('');
                $('#filterForm').submit();
            });
        });

        // Función para cambiar el estado del usuario
        function cambiarEstadoUsuario(id, nombre, estadoActual) {
            var nuevoEstado = estadoActual === 1 ? 'Inactivo' : 'Activo';
            var colorEstado = estadoActual === 1 ? '#d33' : '#4CAF50';

            Swal.fire({
                title: 'Cambiar Estado',
                html: `¿Estás seguro de que deseas cambiar el estado del usuario <strong>${nombre}</strong> a <strong>${nuevoEstado}</strong>?`,
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Sí, cambiar estado',
                cancelButtonText: 'Cancelar'
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        url: '@Url.Action("ToggleEstado", "Usuarios")',
                        type: 'POST',
                        data: { id: id },
                        success: function (response) {
                            if (response.success) {
                                Swal.fire({
                                    title: '¡Estado Actualizado!',
                                    html: `El usuario <strong>${response.userName}</strong> ahora está <strong>${response.estado === 1 ? 'Activo' : 'Inactivo'}</strong>`,
                                    icon: 'success',
                                    timer: 2000,
                                    timerProgressBar: true,
                                    showConfirmButton: false
                                }).then(() => {
                                    // Recarga la página para reflejar el cambio
                                    window.location.reload();
                                });
                            } else {
                                Swal.fire({
                                    title: 'Error',
                                    text: response.message || 'No se pudo cambiar el estado.',
                                    icon: 'error'
                                });
                            }
                        },
                        error: function () {
                            Swal.fire({
                                title: 'Error',
                                text: 'Ocurrió un error al procesar la solicitud.',
                                icon: 'error'
                            });
                        }
                    });
                }
            });
        }
    </script>
}